<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Edited with: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
	<!--
		Module: 		LogInsight
		Version:		1.0
	-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-hLogInsightJsonDateTime</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>hLogInsightJsonDateTime</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-hLogInsightJsonDateTime</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-hLogInsightJsonDateTime</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>hLogInsightJsonDateTime</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-hLogInsightJsonDateTime</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Convert-hLogInsightTimeField</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Convert</command:verb>
			<command:noun>hLogInsightTimeField</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Convert-hLogInsightTimeField</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-hLogInsightRest</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>hLogInsightRest</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-hLogInsightRest</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Connect-LogInsight</command:name>
			<maml:description>
				<maml:para>Connect to a Log Insight server</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Connect</command:verb>
			<command:noun>LogInsight</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The cmdlet opens a connection to a Log Insight server.
All communication to the Log Insight server will occur over HTTPS.
The Log Insight server information (hostname, session authentication) will be stored in the Script scope.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Connect-LogInsight</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Server</maml:name>
					<maml:description>
						<maml:para>The Log Insight server.
Can be an IP address or a FQDN</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named">
					<maml:name>Credential</maml:name>
					<maml:description>
						<maml:para>The credential to access the Log Insight server.
The credential needs at least the &quot;User&quot; role on the Log Insight server</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Proxy</maml:name>
					<maml:description>
						<maml:para>The proxy, if required, through which communication to the Log Insight server shall run.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Fiddler</maml:name>
					<maml:description>
						<maml:para>Hidden parameter for debugging purposes.
If this switch is set and if Fiddler is running, all communication to the Log Insight server will pass through the
Fiddler proxy. And thus allow inspection of the packets.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Connect-LogInsight</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Server</maml:name>
					<maml:description>
						<maml:para>The Log Insight server.
Can be an IP address or a FQDN</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>User</maml:name>
					<maml:description>
						<maml:para>The username to access the Log Insight server.
The credential needs at least the &quot;User&quot; role on the Log Insight server</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Password</maml:name>
					<maml:description>
						<maml:para>The password for the user to access the Log Insight server.
The credential needs at least the &quot;User&quot; role on the Log Insight server</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Proxy</maml:name>
					<maml:description>
						<maml:para>The proxy, if required, through which communication to the Log Insight server shall run.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Fiddler</maml:name>
					<maml:description>
						<maml:para>Hidden parameter for debugging purposes.
If this switch is set and if Fiddler is running, all communication to the Log Insight server will pass through the
Fiddler proxy. And thus allow inspection of the packets.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>The Log Insight server.
Can be an IP address or a FQDN</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>The credential to access the Log Insight server.
The credential needs at least the &quot;User&quot; role on the Log Insight server</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
				<dev:type>
					<maml:name>PSCredential</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>The proxy, if required, through which communication to the Log Insight server shall run.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Fiddler</maml:name>
				<maml:description>
					<maml:para>Hidden parameter for debugging purposes.
If this switch is set and if Fiddler is running, all communication to the Log Insight server will pass through the
Fiddler proxy. And thus allow inspection of the packets.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>The username to access the Log Insight server.
The credential needs at least the &quot;User&quot; role on the Log Insight server</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>The password for the user to access the Log Insight server.
The credential needs at least the &quot;User&quot; role on the Log Insight server</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Management.Automation.PSCredential</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Connect-LogInsight -Server loginsight.local.lab -Credential $cred</dev:code>
				<dev:remarks>
					<maml:para>Establish a connection to the Log Insight server with the credentials in the variable $cred.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Connect-LogInsight -Server loginsight.local.lab -Credential $cred -Proxy myproxy.local.lab</dev:code>
				<dev:remarks>
					<maml:para>Establish a connection to the Log Insight server with the credentials in the variable $cred.
All traffic to the Log Insight server will pass over the proxy server at myproxy.local.lab</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Fiddler</maml:linkText>
				<maml:uri>http://www.telerik.com/fiddler</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>vRealize Log Insight</maml:linkText>
				<maml:uri>https://www.vmware.com/products/vrealize-log-insight</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LogInsightEvent</command:name>
			<maml:description>
				<maml:para>Retrieve Events from the Log INsight server</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LogInsightEvent</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The cmdlet uses the Log Insight Query API to retrieve events from the Log Insight server.
The cmdlet can retrieve actual &#39;events&#39; or &#39;aggregated events&#39;, also called &#39;bins&#39;.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LogInsightEvent</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Constraint</maml:name>
					<maml:description>
						<maml:para>An array with constraints.
A constraint is a condition to which the returned events have to comply.
See Get-LogInsightConstraint</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Event</maml:name>
					<maml:description>
						<maml:para>A switch that indicates that Events shall be returned.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Limit</maml:name>
					<maml:description>
						<maml:para>The maximum number of events or aggregated events that can be returned.
For events (Event) the maximum is 20000.
For aggregated events (Aggregate) the maximum is 2000</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Timeout</maml:name>
					<maml:description>
						<maml:para>A timeout, in milliseconds, for the query.
If the query didn&#39;t complete within the timeout interval, the returned object&#39;s Complete property will be $false.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Raw</maml:name>
					<maml:description>
						<maml:para>Hidden switch for debugging purposes.
If this switch is set, all DateTime values in the returned objects will be in the JSON DateTime format (Unix Epoch).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-LogInsightEvent</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Constraint</maml:name>
					<maml:description>
						<maml:para>An array with constraints.
A constraint is a condition to which the returned events have to comply.
See Get-LogInsightConstraint</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Aggregate</maml:name>
					<maml:description>
						<maml:para>A switch that indicates that aggregated events, also called bins, will be returned.
When aggregated events are selected, additional aggregate related parameters are available.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Limit</maml:name>
					<maml:description>
						<maml:para>The maximum number of events or aggregated events that can be returned.
For events (Event) the maximum is 20000.
For aggregated events (Aggregate) the maximum is 2000</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Timeout</maml:name>
					<maml:description>
						<maml:para>A timeout, in milliseconds, for the query.
If the query didn&#39;t complete within the timeout interval, the returned object&#39;s Complete property will be $false.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>BinWidth</maml:name>
					<maml:description>
						<maml:para>The time interval for a bin.
By default aggregated events are collected in 5 second intervals.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Function</maml:name>
					<maml:description>
						<maml:para>A function that will be applied to the aggregated events.
The available functions are

COUNT: The count of the events in each bin is returned

SAMPLE: An arbitrary event from each bin is returned

UCOUNT: The count of unique values in the bin

MIN: The minimum value in the bin

MAX: The maximum value in the bin

SUM: The sum of the values in the bin

STDEV: The standard deviation of the values in the bin

VARIANCE: The variance of the values in the bin</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Raw</maml:name>
					<maml:description>
						<maml:para>Hidden switch for debugging purposes.
If this switch is set, all DateTime values in the returned objects will be in the JSON DateTime format (Unix Epoch).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Constraint</maml:name>
				<maml:description>
					<maml:para>An array with constraints.
A constraint is a condition to which the returned events have to comply.
See Get-LogInsightConstraint</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Event</maml:name>
				<maml:description>
					<maml:para>A switch that indicates that Events shall be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Limit</maml:name>
				<maml:description>
					<maml:para>The maximum number of events or aggregated events that can be returned.
For events (Event) the maximum is 20000.
For aggregated events (Aggregate) the maximum is 2000</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>100 events</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Timeout</maml:name>
				<maml:description>
					<maml:para>A timeout, in milliseconds, for the query.
If the query didn&#39;t complete within the timeout interval, the returned object&#39;s Complete property will be $false.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>30 seconds</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Raw</maml:name>
				<maml:description>
					<maml:para>Hidden switch for debugging purposes.
If this switch is set, all DateTime values in the returned objects will be in the JSON DateTime format (Unix Epoch).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Aggregate</maml:name>
				<maml:description>
					<maml:para>A switch that indicates that aggregated events, also called bins, will be returned.
When aggregated events are selected, additional aggregate related parameters are available.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>BinWidth</maml:name>
				<maml:description>
					<maml:para>The time interval for a bin.
By default aggregated events are collected in 5 second intervals.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>5000</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Function</maml:name>
				<maml:description>
					<maml:para>A function that will be applied to the aggregated events.
The available functions are

COUNT: The count of the events in each bin is returned

SAMPLE: An arbitrary event from each bin is returned

UCOUNT: The count of unique values in the bin

MIN: The minimum value in the bin

MAX: The maximum value in the bin

SUM: The sum of the values in the bin

STDEV: The standard deviation of the values in the bin

VARIANCE: The variance of the values in the bin</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>COUNT</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LogInsightEvent -Event</dev:code>
				<dev:remarks>
					<maml:para>This will return 100 events from the last minute</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LogInsightEvent -Aggregate -Function SAMPLE -BinWidth 60000</dev:code>
				<dev:remarks>
					<maml:para>Returns aggregated events in bins.
Each bin has a 60 second width, and for each bin there will a random sample event included</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LogInsightConstraint</command:name>
			<maml:description>
				<maml:para>Create a constraint</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LogInsightConstraint</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Create a constraint that can be used on the Constraint parameter of the Get-LogInsightEvent cmdlet.
Constraints are basically filters that allow you to specify which events are returned.

If you specify multiple constraints, they are OR-ed together.
If you specify multiple constraints on the same field, those constraints are AND-ed together.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LogInsightConstraint</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Field</maml:name>
					<maml:description>
						<maml:para>This defines on which property of the event the constraint will be applied.
These fields can be:
text or timestamp

Any static field
A field defined in a content pack (see also ContentPack)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Operator</maml:name>
					<maml:description>
						<maml:para>The &#39;operation&#39; that will be applied on the Field.
Operators can be numeric, string or DateTime operators, or a test for the existance of a spcific field.

Numeric operators can be applied to fields that contain numbers
The &#39;numeric&#39; operators are
=  the &#39;equals&#39; operator
!= the &#39;not-equals&#39; operator
&lt;  the &#39;less-than&#39; operator
&lt;= the &#39;less-than-or-equals&#39; operator
&gt;  the &#39;larger-than&#39; operator
&gt;= the &#39;larger-than-or-equals&#39; operator

String operators are case-insensitive filters that can be applied
 to text fields
The &#39;string&#39; operators are
CONTAINS          checks if a text field contains a value
NOT_CONTAINS      checks if a text field does not contain a value
HAS               checks if a field contains every white-space delimited
 token in the value
NOT_HAS           checks if a text field does not contain all of the tokens in the value
MATCHES_REGEX     checks if a text field matches a regular expression
NOT_MATCHES_REGEX checks if a text field does not match a regular expression

For a DateTime field the LAST operator selects a time range in milliseconds relative to the current time.

The test for the existance of a field uses the EXISTS operator. For this constraint there is no Value parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>Value</maml:name>
					<maml:description>
						<maml:para>The Value that is used to select the events.
This combines with the Field and Operator parameters.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">PSObject</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Field</maml:name>
				<maml:description>
					<maml:para>This defines on which property of the event the constraint will be applied.
These fields can be:
text or timestamp

Any static field
A field defined in a content pack (see also ContentPack)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Operator</maml:name>
				<maml:description>
					<maml:para>The &#39;operation&#39; that will be applied on the Field.
Operators can be numeric, string or DateTime operators, or a test for the existance of a spcific field.

Numeric operators can be applied to fields that contain numbers
The &#39;numeric&#39; operators are
=  the &#39;equals&#39; operator
!= the &#39;not-equals&#39; operator
&lt;  the &#39;less-than&#39; operator
&lt;= the &#39;less-than-or-equals&#39; operator
&gt;  the &#39;larger-than&#39; operator
&gt;= the &#39;larger-than-or-equals&#39; operator

String operators are case-insensitive filters that can be applied
 to text fields
The &#39;string&#39; operators are
CONTAINS          checks if a text field contains a value
NOT_CONTAINS      checks if a text field does not contain a value
HAS               checks if a field contains every white-space delimited
 token in the value
NOT_HAS           checks if a text field does not contain all of the tokens in the value
MATCHES_REGEX     checks if a text field matches a regular expression
NOT_MATCHES_REGEX checks if a text field does not match a regular expression

For a DateTime field the LAST operator selects a time range in milliseconds relative to the current time.

The test for the existance of a field uses the EXISTS operator. For this constraint there is no Value parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>The Value that is used to select the events.
This combines with the Field and Operator parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">PSObject</command:parameterValue>
				<dev:type>
					<maml:name>PSObject</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LogInsightConstraint -Field &#39;text&#39; -Operator CONTAINS -Value &#39;error&#39;</dev:code>
				<dev:remarks>
					<maml:para>All events where the text field contains the text &apos;error&apos;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LogInsightConstraint -Field &apos;timestamp&apos; -Operator GE -Value (Get-Date).AddHours(-1)</dev:code>
				<dev:remarks>
					<maml:para>Creates a constraint the says all events with a timestamp in the last hour</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$constraint = (Get-LogInsightConstraint -Field &apos;timestamp&apos; -Operator GE -Value $start),
    (Get-LogInsightConstraint -Field &apos;timestamp&apos; -Operator LT -Value $start.AddMinutes(10))</dev:code>
				<dev:remarks>
					<maml:para>These constraints are for the same field, the constraints will be AND-ed together.
The combination of both will create a constraint that will collect events from the point in time in $start, and that for an interval of 10 minutes.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
</helpItems>